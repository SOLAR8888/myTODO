{"version":3,"sources":["context/AuthContext.js","context/alert/alertContext.js","components/Navbar.js","components/Alert.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/api/apiContext.js","components/InputForm.js","components/Notes.js","components/Filter.js","pages/Home.js","pages/AuthPage.js","hooks/message.hook.js","hooks/http.hook.js","hooks/auth.hook.js","context/api/apiReducer.js","context/api/APIState.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["empty","AuthContext","createContext","token","userId","login","logout","isAuthenticated","AlertContext","Navbar","alert","useContext","auth","className","onClick","hide","type","Alert","visible","text","SHOW_ALERT","HIDE_ALERT","SHOW_LOADER","ADD_NOTE","FETCH_NOTES","REMOVE_NOTE","UPDATE_NOTE","handlers","DEFAULT","state","payload","alertReducer","action","AlertState","children","useReducer","dispatch","Provider","value","show","APIContext","InputForm","useState","setValue","addNote","onSubmit","event","preventDefault","trim","placeholder","onChange","target","Notes","notes","filter","library","add","faCheck","faTimes","removeNote","updateNote","loadID","setLoadID","load","setLoad","onCheckClick","note","a","_id","done","order","onRemoveClick","id","droppableId","provided","ref","innerRef","droppableProps","map","sort","b","index","draggableId","draggableProps","dragHandleProps","key","style","textDecoration","Date","createdAt","toLocaleString","icon","role","Filter","setFilter","Home","loading","fetchNotes","useEffect","onDragEnd","result","destination","source","sorted","newOrder","length","prevOrder","nextOrder","AuthPage","message","useCallback","window","M","toast","html","setLoading","error","setError","request","url","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","clearError","useHttp","email","password","form","setForm","setLogin","isLoginHandler","l","document","getElementById","changeHandler","name","registerHandler","confirm","loginHandler","htmlFor","disabled","storageName","curr","flag","apiReducer","APIState","process","API_BASE","showLoader","config","axios","get","res","Object","keys","post","status","App","setToken","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","component","to","useRoutes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b28fafff.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nfunction empty() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token:null,\r\n    userId:null,\r\n    login:empty,\r\n    logout:empty,\r\n    isAuthenticated:false\r\n})\r\n","import {createContext} from 'react';\r\n\r\nexport const AlertContext = createContext();","import React, {useContext} from 'react';\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\n\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n    const alert = useContext(AlertContext);\r\n\r\n    const  auth = useContext(AuthContext);\r\n    const logoutHandler = () => {\r\n        auth.logout();\r\n        alert.hide();\r\n    }\r\n\r\n    return (\r\n        <nav className='navbar navbar-dark navbar-expand-lg bg-dark'>\r\n            <div className='navbar-brand'>\r\n                TODOwe4ka\r\n            </div>\r\n            {auth.isAuthenticated && <button onClick={logoutHandler} type=\"button\" className=\"btn btn-outline-light m-1\">Выйти</button>}\r\n        </nav>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\n\r\nexport const Alert = () => {\r\n\r\n    const {alert, hide} = useContext(AlertContext);\r\n\r\n    if (!alert.visible) return null;\r\n\r\n    return (\r\n        <div className={`alert alert-${alert.type || 'warning'} alert-dismissible`}>\r\n            <strong>{alert.type === 'success' ? 'Ух ты! ' : 'Эмм... '}</strong>\r\n            {alert.text}\r\n            <button onClick={hide} type=\"button\" className=\"btn-close\" aria-label=\"Close\"></button>\r\n        </div>\r\n    )\r\n}\r\n","export const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT';\r\nexport const SHOW_LOADER = 'SHOW_LOADER';\r\nexport const ADD_NOTE = 'ADD_NOTE';\r\nexport const FETCH_NOTES = 'FETCH_NOTES';\r\nexport const REMOVE_NOTE = 'REMOVE_NOTE';\r\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\r\n\r\n","import {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nconst handlers = {\r\n    DEFAULT: state => state,\r\n    [SHOW_ALERT]:(state, {payload}) => ({...payload, visible:true}),\r\n    [HIDE_ALERT]:state => ({...state, visible:false})\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n    const handle =handlers[action.type] || handlers.DEFAULT;\r\n    return handle(state, action)\r\n}","import React, {useReducer} from 'react';\r\nimport {AlertContext} from \"./alertContext\";\r\nimport {alertReducer} from \"./alertReducer\";\r\nimport {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nexport const AlertState = ({children}) =>{\r\n    const [state, dispatch] = useReducer(alertReducer, {visible: false});\r\n\r\n    const show = (text, type = 'warning') => {\r\n        //убрал алерт\r\n        return;\r\n\r\n        dispatch({\r\n            type: SHOW_ALERT,\r\n            payload: {text, type}\r\n        })\r\n\r\n        setTimeout(hide, 3000);\r\n    }\r\n\r\n    const hide = () => dispatch({type: HIDE_ALERT})\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            show, hide,\r\n            alert: state\r\n        }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}\r\n","import {createContext} from 'react'\r\n\r\nexport const APIContext = createContext();\r\n","import React, {useState, useContext} from 'react';\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\nimport {APIContext} from \"../context/api/apiContext\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const InputForm = ()=>{\r\n    const [value, setValue] = useState('');\r\n    const alert = useContext(AlertContext);\r\n    const {addNote} = useContext(APIContext);\r\n\r\n    const {token} = useContext(AuthContext);\r\n\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n        if (value.trim()){\r\n            //создать заметку\r\n            addNote(value,token);\r\n\r\n            setValue('')\r\n        }\r\n        else {\r\n            alert.show('Заметка пустая');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler} className='form-inline'>\r\n            <div className='form-group'>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        placeholder='Введите текст заметки'\r\n                        value={value}\r\n                        onChange={event => {setValue(event.target.value)}}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <button type=\"submit\" className=\"btn btn-outline-secondary\">Добавить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n        )\r\n}\r\n","import React, {useContext, useState} from 'react';\r\nimport {APIContext} from \"../context/api/apiContext\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Droppable, Draggable} from \"react-beautiful-dnd\";\r\n\r\n\r\nexport const Notes = ({notes, filter}) => {\r\n\r\n    library.add(faCheck,faTimes);\r\n\r\n    const {removeNote, updateNote} = useContext(APIContext);\r\n\r\n    const {token} = useContext(AuthContext);\r\n\r\n    const [loadID, setLoadID] = useState('');\r\n    const [load, setLoad] = useState(false);\r\n\r\n    const onCheckClick = async (note ,token) => {\r\n        const {_id, done, order} = note;\r\n        setLoad(true);\r\n        setLoadID(_id);\r\n        await updateNote(_id, !done, order, token);\r\n        setLoad(false);\r\n        setLoadID('');\r\n    }\r\n\r\n    const onRemoveClick = async (id, token) => {\r\n        setLoad(true);\r\n        setLoadID(id);\r\n        await removeNote(id, token);\r\n        setLoad(false);\r\n        setLoadID('');\r\n    }\r\n\r\n\r\n    return (\r\n        <Droppable droppableId='notes'>\r\n            {\r\n                provided => (\r\n                    <ul className='list-group'\r\n                        ref = {provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                    >\r\n                        {notes\r\n                            .map(note => {\r\n                                if(!note.order) note.order = 0;\r\n                                return note\r\n                            })\r\n                            .sort((a,b) => (a.order - b.order))\r\n                            .filter(note => {\r\n                            switch (filter){\r\n                                case 0:\r\n                                    return true;\r\n                                case 1:\r\n                                    return note.done;\r\n                                case 2:\r\n                                    return !note.done;\r\n                            }\r\n                            return true;\r\n                        }).map((note,index)=>(\r\n                            <Draggable draggableId={note._id} index={index} key={note._id}>\r\n                                {provided => (\r\n                                    <li\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        ref = {provided.innerRef}\r\n                                        className='list-group-item note'\r\n                                        key = {note.id}>\r\n                                        <div className='note-text'>\r\n                                            <strong style={note.done ? {textDecoration:'line-through'} : {}}> {note.text} </strong>\r\n                                            <div className='text-info text-sm-start'>{new Date(note.createdAt).toLocaleString()}</div>\r\n                                        </div>\r\n\r\n                                        <div className='buttons'>\r\n                                            <button onClick={() => onCheckClick(note, token)}  className={note.done ? \"btn btn-success btn-sm mx-1\" : \"btn btn-outline-success btn-sm mx-1\"}>\r\n                                                {/*&#128504;*/}\r\n\r\n                                                {(!load || loadID !== note._id) &&\r\n                                                <FontAwesomeIcon className='fa-fw' icon=\"check\" />\r\n                                                }\r\n                                                {load && loadID === note._id &&\r\n                                                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                }\r\n\r\n                                            </button>\r\n                                            <button onClick={() => onRemoveClick(note._id, token)} data-bs-toggle=\"modal\" data-bs-target=\"#modal\"  type=\"button\" className=\"btn btn-outline-danger btn-sm mx-1\">\r\n                                                {/*&times;*/}\r\n                                                {(!load || loadID !== note._id) &&\r\n                                                <FontAwesomeIcon className='fa-fw' icon=\"times\" />\r\n                                                }\r\n                                                {load && loadID === note._id &&\r\n                                                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                }\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                    </li>\r\n                                )}\r\n\r\n                            </Draggable>\r\n\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </ul>\r\n                )\r\n\r\n            }\r\n\r\n        </Droppable>\r\n\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Filter = ({filter, setFilter}) => {\r\n\r\n    return (\r\n        <div className='filter'>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                <button onClick={() => setFilter(0)} type=\"button\" className={`btn btn${filter===0 ? '' : '-outline'}-secondary`}>Все</button>\r\n                <button onClick={() =>setFilter(1)} type=\"button\" className={`btn btn${filter===1 ? '' : '-outline'}-secondary`}>Выполненные</button>\r\n                <button onClick={() =>setFilter(2)} type=\"button\" className={`btn btn${filter===2 ? '' : '-outline'}-secondary`}>Невыполненные</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport {InputForm} from \"../components/InputForm\";\r\nimport {Notes} from \"../components/Notes\";\r\nimport {APIContext} from \"../context/api/apiContext\";\r\nimport {Filter} from \"../components/Filter\";\r\n\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nimport {DragDropContext} from \"react-beautiful-dnd\";\r\n\r\nexport const Home = () => {\r\n\r\n    const {loading, notes, fetchNotes, updateNote} = useContext(APIContext);\r\n    const {token} = useContext(AuthContext);\r\n\r\n    const [filter, setFilter] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        fetchNotes(token);\r\n\r\n    }, [])\r\n\r\n    const onDragEnd = async (result) => {\r\n        //тут нужно изменить order у note и отправить изменение на сервер\r\n        //после чего отсортировать массив notes по возростанию order\r\n        if (!result.destination) return;\r\n        if(result.destination.index == result.source.index) return;\r\n        let sorted = notes.sort((a,b) => a.order - b.order);\r\n        let note = sorted[result.source.index];\r\n        //нужно order становить как среднее между предыдущей и следующей заметкой на новом месте\r\n        let newOrder;\r\n        if (result.destination.index == 0) newOrder = sorted[0].order - 0.000001;//тащим в начало\r\n        else if (result.destination.index == sorted.length - 1) newOrder = sorted[sorted.length -1].order + 0.000001;//тащим в конец\r\n        else {\r\n            let prevOrder = result.destination.index - result.source.index > 0 ? sorted[result.destination.index].order : sorted[result.destination.index -1].order;\r\n            let nextOrder = result.destination.index - result.source.index > 0 ? sorted[result.destination.index + 1].order : sorted[result.destination.index].order;\r\n            newOrder = (prevOrder + nextOrder)/2;\r\n        }\r\n        note.order = newOrder;//может быть < 0\r\n        await updateNote(note._id, note.done, note.order, token);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <InputForm/>\r\n            <hr/>\r\n            <Filter filter={filter} setFilter={setFilter}/>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n\r\n                    <Notes notes={notes} filter={filter} />\r\n\r\n\r\n            </DragDropContext>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useContext, useEffect, useState, Fragment} from 'react'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\n\r\nexport const AuthPage = () =>{\r\n    const auth = useContext(AuthContext);\r\n    const message = useMessage();\r\n    const {loading, error, request, clearError} = useHttp();\r\n\r\n    const [form, setForm] = useState({\r\n        email:'',\r\n        password:''\r\n    });\r\n\r\n    const [login, setLogin] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        message(error);\r\n        clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    const isLoginHandler = (l = false) => {\r\n        setLogin(!login);\r\n        if (!l){\r\n            document.getElementById('email').value = '';\r\n            document.getElementById('password').value = '';\r\n        }\r\n    }\r\n\r\n    const changeHandler = event => {\r\n        setForm({...form, [event.target.name]:event.target.value})\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try{\r\n            if (form.password !== form.confirm){\r\n                message('Пароли не совпадают');\r\n                return;\r\n            }\r\n            const  data = await request('/api/auth/register','POST', {...form});\r\n            if (data.token){\r\n                auth.login(data.token, data.userId);\r\n            }\r\n            message(data.message);\r\n        }\r\n        catch (e){\r\n\r\n        }\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try{\r\n            const  data = await request('/api/auth/login','POST', {...form});\r\n            auth.login(data.token, data.userId);\r\n        }\r\n        catch (e){\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card\">\r\n                <h5 className=\"card-header\">Авторизация</h5>\r\n                <div className=\"card-body\">\r\n                    <div className=\"form-floating mb-3\">\r\n                        <input onChange={changeHandler} type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" placeholder=\"name@example.com\"/>\r\n                            <label htmlFor=\"email\">Email address</label>\r\n                    </div>\r\n                    <div className=\"form-floating  mb-3\">\r\n                        <input onChange={changeHandler} type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Password\"/>\r\n                            <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n\r\n                    {!login &&\r\n                    <div className=\"form-floating\">\r\n                        <input onChange={changeHandler} type=\"password\" className=\"form-control\" id=\"confirm\" name=\"confirm\" placeholder=\"Confirm password\"/>\r\n                        <label htmlFor=\"password\">Confirm password</label>\r\n                    </div>\r\n                    }\r\n\r\n\r\n                    <hr/>\r\n                    {login &&\r\n                        <div>\r\n                            <button  onClick={loginHandler} disabled={loading} className=\"btn btn-primary m-1\">Войти</button>\r\n                            <button  onClick={() => isLoginHandler()} disabled={loading} className=\"btn btn-link m-1\">Регистрация</button>\r\n                        </div>\r\n                    }\r\n                    {!login &&\r\n                        <div>\r\n                            <button  onClick={isLoginHandler} disabled={loading} className=\"btn btn-link\">Войти</button>\r\n                            <button  onClick={() => registerHandler(true)} disabled={loading} className=\"btn btn-primary\">Зарегистрироваться</button>\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import {useCallback} from \"react\";\r\n\r\nexport const useMessage = () =>{\r\n    return useCallback(text => {\r\n        //TODO заменить на react-bootstrap Toast\r\n        if (window.M && text){\r\n            window.M.toast({html:text});\r\n        }\r\n    },[])\r\n}\r\n","import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true);\r\n        try{\r\n            if(body){\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            }\r\n           const  response = await fetch(url, {\r\n               method, body, headers\r\n           })\r\n\r\n            const data = await response.json();\r\n\r\n           if (!response.ok){\r\n               throw new Error(data.message || 'Ошибочка вышла')\r\n           }\r\n\r\n           setLoading(false);\r\n\r\n           return data;\r\n        }\r\n        catch (e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback( ()=> setError(null),[]);\r\n\r\n    return {loading, request, error, clearError}\r\n}\r\n","import {useState, useCallback, useEffect} from 'react'\r\n\r\nconst storageName = 'userData';\r\n\r\nexport const useAuth = () => {\r\n\r\n    const [token, setToken] = useState(null);\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    const login = useCallback( (jwtToken, id) => {\r\n        setToken(jwtToken);\r\n        setUserId(id);\r\n        localStorage.setItem(storageName, JSON.stringify({userId:id, token:jwtToken}));\r\n\r\n    }, []);\r\n    const logout = useCallback( () => {\r\n        setToken(null);\r\n        setUserId(null);\r\n        localStorage.removeItem(storageName);\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n        if(data && data.token){\r\n            login(data.token, data.userId);\r\n        }\r\n\r\n    },[login]);\r\n\r\n    return {login, logout, token, userId}\r\n\r\n}\r\n","import {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER, UPDATE_NOTE} from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_LOADER]: state => ({...state, loading:true}),\r\n    [ADD_NOTE]: (state, {payload}) => ({...state, notes: [...state.notes, payload]}),\r\n    [FETCH_NOTES]: (state, {payload}) => ({...state, notes:payload, loading:false}),\r\n    [REMOVE_NOTE]: (state, {payload}) => ({...state, notes: state.notes.filter(note => note._id !== payload)}),\r\n    [UPDATE_NOTE]: (state, {payload}) => ({...state, notes: state.notes.map((curr)=>{if(curr._id === payload.id) {curr.done = payload.flag; curr.order = payload.order} ;return curr})}),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport  const  apiReducer = (state, action)=>{\r\n    const handle = handlers[action.type]  ||  handlers.DEFAULT\r\n    return handle(state, action);\r\n}\r\n","import React, { useContext, useReducer } from \"react\";\r\nimport {APIContext} from \"./apiContext\";\r\nimport {apiReducer} from \"./apiReducer\";\r\nimport axios from \"axios\";\r\nimport {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER, UPDATE_NOTE} from \"../types\";\r\nimport {AlertContext} from \"../alert/alertContext\";\r\n\r\n\r\nconst baseUrl = process.env.API_BASE || 'http://localhost:5000';\r\n\r\nexport const APIState = ({children}) =>{\r\n    const initialState = {\r\n        notes:[],\r\n        loading:false\r\n    }\r\n\r\n    const alert = useContext(AlertContext);\r\n\r\n    const [state, dispatch] = useReducer(apiReducer, initialState);\r\n\r\n    const showLoader = () => dispatch({type:SHOW_LOADER});\r\n\r\n    const fetchNotes = async (token) => {\r\n        showLoader();\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }\r\n        const res = await axios.get(`/api/note/`, config);\r\n\r\n        const payload = Object.keys(res.data).map(key => {\r\n            return {\r\n                ...res.data[key],\r\n                id:key\r\n            }\r\n        })\r\n\r\n        dispatch({\r\n            type:FETCH_NOTES,\r\n            payload\r\n        })\r\n    }\r\n\r\n    const addNote = async (text, token) => {\r\n        const note = {\r\n            text\r\n        }\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }\r\n        try{\r\n            const res = await axios.post(`/api/note/add`, note, config)\r\n\r\n            const payload = {\r\n                ...res.data.note,\r\n                id:res.data.note._id\r\n            }\r\n            if (res.status === 200) alert.show('Заметка создана', 'success');\r\n\r\n            dispatch({type:ADD_NOTE, payload})\r\n        }\r\n        catch (e) {\r\n            throw new Error(e.message)\r\n        }\r\n\r\n    }\r\n\r\n    const removeNote = async (id, token) => {\r\n        const note = {\r\n            id\r\n        }\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }\r\n        const res = await axios.post(`/api/note/remove`, note, config)\r\n\r\n        if (res.status === 200) alert.show('Заметка удалена', 'warning');\r\n        dispatch({type: REMOVE_NOTE, payload: id})\r\n    }\r\n\r\n    const updateNote = async (id, flag, order, token) => {\r\n        const note = {\r\n            id,\r\n            done:flag,\r\n            order\r\n        }\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }\r\n        const res = await axios.post(`/api/note/update`, note, config)\r\n\r\n        if (res.status === 200) alert.show('Заметка обновлена', 'success');\r\n        dispatch({type:UPDATE_NOTE, payload:{id, flag, order}})\r\n    }\r\n\r\n    return (\r\n        <APIContext.Provider value={{\r\n           showLoader,  addNote, removeNote, fetchNotes, updateNote,\r\n            loading: state.loading,\r\n            notes: state.notes\r\n        }}>\r\n            {children}\r\n        </APIContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Navbar} from './components/Navbar'\r\nimport {Alert} from \"./components/Alert\";\r\nimport {AlertState} from \"./context/alert/AlertState\";\r\nimport {useRoutes} from \"./routes\";\r\nimport 'materialize-css';\r\nimport {useAuth} from \"./hooks/auth.hook\";\r\nimport {AuthContext} from \"./context/AuthContext\";\r\nimport {APIState} from \"./context/api/APIState\";\r\n\r\nfunction App() {\r\n    const {token, login, logout, userId} = useAuth();\r\n    const isAuthenticated = !!token;\r\n    const routes = useRoutes(isAuthenticated);\r\n\r\n  return (\r\n\r\n      <AlertState>\r\n          <AuthContext.Provider value={{token, userId, login, logout, isAuthenticated}}>\r\n                  <APIState>\r\n                        <BrowserRouter>\r\n                            <Navbar/>\r\n                            <div className=\"container pt-4\">\r\n                                <Alert/>\r\n                                {routes}\r\n                            </div>\r\n                        </BrowserRouter>\r\n                  </APIState>\r\n          </AuthContext.Provider>\r\n      </AlertState>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport  {Switch, Route, Redirect} from 'react-router-dom';\r\nimport {Home} from \"./pages/Home\";\r\nimport {AuthPage} from \"./pages/AuthPage\";\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n    if (isAuthenticated){\r\n        return (\r\n            <Switch>\r\n                <Route path={'/'} exact component={Home}/>\r\n                <Redirect to='/'/>\r\n            </Switch>\r\n        )\r\n    }\r\n    return (\r\n        <Switch>\r\n            <Route path={'/'} exact component={AuthPage}/>\r\n            <Redirect to='/'/>\r\n        </Switch>\r\n    )\r\n\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}