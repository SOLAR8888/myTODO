{"version":3,"sources":["context/AuthContext.js","context/alert/alertContext.js","components/Navbar.js","components/Alert.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/api/apiContext.js","components/InputForm.js","components/Notes.js","components/Filter.js","pages/Home.js","pages/AuthPage.js","hooks/message.hook.js","hooks/http.hook.js","hooks/auth.hook.js","context/api/apiReducer.js","context/api/APIState.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["empty","AuthContext","createContext","token","userId","login","logout","isAuthenticated","AlertContext","Navbar","alert","useContext","auth","className","onClick","hide","type","Alert","visible","text","SHOW_ALERT","HIDE_ALERT","SHOW_LOADER","ADD_NOTE","FETCH_NOTES","REMOVE_NOTE","UPDATE_NOTE","handlers","DEFAULT","state","payload","alertReducer","action","AlertState","children","useReducer","dispatch","Provider","value","show","APIContext","InputForm","useState","setValue","addNote","onSubmit","event","preventDefault","trim","placeholder","onChange","target","Notes","notes","filter","library","add","faCheck","faTimes","removeNote","updateNote","note","done","map","style","textDecoration","Date","createdAt","toLocaleString","_id","icon","id","Filter","setFilter","role","Home","loading","fetchNotes","useEffect","AuthPage","message","useCallback","window","M","toast","html","setLoading","error","setError","request","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","clearError","useHttp","email","password","form","setForm","setLogin","isLoginHandler","changeHandler","name","registerHandler","confirm","loginHandler","htmlFor","disabled","storageName","curr","flag","apiReducer","APIState","process","API_BASE","showLoader","config","axios","get","res","Object","keys","key","post","status","App","setToken","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","component","to","useRoutes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.070cb016.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nfunction empty() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token:null,\r\n    userId:null,\r\n    login:empty,\r\n    logout:empty,\r\n    isAuthenticated:false\r\n})\r\n","import {createContext} from 'react';\r\n\r\nexport const AlertContext = createContext();","import React, {useContext} from 'react';\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\n\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n    const alert = useContext(AlertContext);\r\n\r\n    const  auth = useContext(AuthContext);\r\n    const logoutHandler = () => {\r\n        auth.logout();\r\n        alert.hide();\r\n    }\r\n\r\n    return (\r\n        <nav className='navbar navbar-dark navbar-expand-lg bg-dark'>\r\n            <div className='navbar-brand'>\r\n                TODOwe4ka\r\n            </div>\r\n            {auth.isAuthenticated && <button onClick={logoutHandler} type=\"button\" className=\"btn btn-outline-light m-1\">Выйти</button>}\r\n        </nav>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\n\r\nexport const Alert = () => {\r\n\r\n    const {alert, hide} = useContext(AlertContext);\r\n\r\n    if (!alert.visible) return null;\r\n\r\n    return (\r\n        <div className={`alert alert-${alert.type || 'warning'} alert-dismissible`}>\r\n            <strong>{alert.type === 'success' ? 'Ух ты! ' : 'Эмм... '}</strong>\r\n            {alert.text}\r\n            <button onClick={hide} type=\"button\" className=\"btn-close\" aria-label=\"Close\"></button>\r\n        </div>\r\n    )\r\n}\r\n","export const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT';\r\nexport const SHOW_LOADER = 'SHOW_LOADER';\r\nexport const ADD_NOTE = 'ADD_NOTE';\r\nexport const FETCH_NOTES = 'FETCH_NOTES';\r\nexport const REMOVE_NOTE = 'REMOVE_NOTE';\r\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\r\n\r\n","import {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nconst handlers = {\r\n    DEFAULT: state => state,\r\n    [SHOW_ALERT]:(state, {payload}) => ({...payload, visible:true}),\r\n    [HIDE_ALERT]:state => ({...state, visible:false})\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n    const handle =handlers[action.type] || handlers.DEFAULT;\r\n    return handle(state, action)\r\n}","import React, {useReducer} from 'react';\r\nimport {AlertContext} from \"./alertContext\";\r\nimport {alertReducer} from \"./alertReducer\";\r\nimport {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nexport const AlertState = ({children}) =>{\r\n    const [state, dispatch] = useReducer(alertReducer, {visible: false});\r\n\r\n    const show = (text, type = 'warning') => {\r\n        //убрал алерт\r\n        return;\r\n\r\n        dispatch({\r\n            type: SHOW_ALERT,\r\n            payload: {text, type}\r\n        })\r\n\r\n        setTimeout(hide, 3000);\r\n    }\r\n\r\n    const hide = () => dispatch({type: HIDE_ALERT})\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            show, hide,\r\n            alert: state\r\n        }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}\r\n","import {createContext} from 'react'\r\n\r\nexport const APIContext = createContext();\r\n","import React, {useState, useContext} from 'react';\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\nimport {APIContext} from \"../context/api/apiContext\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const InputForm = ()=>{\r\n    const [value, setValue] = useState('');\r\n    const alert = useContext(AlertContext);\r\n    const {addNote} = useContext(APIContext);\r\n\r\n    const {token} = useContext(AuthContext);\r\n\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n        if (value.trim()){\r\n            //создать заметку\r\n            addNote(value,token);\r\n\r\n            setValue('')\r\n        }\r\n        else {\r\n            alert.show('Заметка пустая');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler} className='form-inline'>\r\n            <div className='form-group'>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        placeholder='Введите текст заметки'\r\n                        value={value}\r\n                        onChange={event => {setValue(event.target.value)}}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <button type=\"submit\" className=\"btn btn-outline-secondary\">Добавить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n        )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {APIContext} from \"../context/api/apiContext\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\nexport const Notes = ({notes, filter}) => {\r\n\r\n    library.add(faCheck,faTimes);\r\n\r\n    const {removeNote, updateNote} = useContext(APIContext);\r\n\r\n    const {token} = useContext(AuthContext);\r\n\r\n\r\n    return (\r\n        <ul className='list-group'>\r\n            {notes.filter(note => {\r\n                switch (filter){\r\n                    case 0:\r\n                        return true;\r\n                    case 1:\r\n                        return note.done;\r\n                    case 2:\r\n                        return !note.done;\r\n                }\r\n                return true;\r\n            }).map((note)=>(\r\n                <li\r\n                    className='list-group-item note'\r\n                    key = {note.id}>\r\n                    <div className='note-text'>\r\n                        <strong style={note.done ? {textDecoration:'line-through'} : {}}> {note.text} </strong>\r\n                        <div className='text-info text-sm-start'>{new Date(note.createdAt).toLocaleString()}</div>\r\n                    </div>\r\n\r\n                    <div className='buttons'>\r\n                        <button onClick={() => updateNote(note._id, !note.done, token)} type=\"button\" className={note.done ? \"btn btn-success btn-sm mx-1\" : \"btn btn-outline-success btn-sm mx-1\"}>\r\n                            {/*&#128504;*/}\r\n                            <FontAwesomeIcon className='fa-fw' icon=\"check\" />\r\n                        </button>\r\n                        <button onClick={() => removeNote(note._id, token)} type=\"button\" className=\"btn btn-outline-danger btn-sm mx-1\">\r\n                            {/*&times;*/}\r\n                            <FontAwesomeIcon className='fa-fw' icon=\"times\" />\r\n                        </button>\r\n                    </div>\r\n\r\n                </li>\r\n            ))}\r\n\r\n        </ul>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Filter = ({filter, setFilter}) => {\r\n\r\n    return (\r\n        <div className='filter'>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                <button onClick={() => setFilter(0)} type=\"button\" className={`btn btn${filter===0 ? '' : '-outline'}-secondary`}>Все</button>\r\n                <button onClick={() =>setFilter(1)} type=\"button\" className={`btn btn${filter===1 ? '' : '-outline'}-secondary`}>Выполненные</button>\r\n                <button onClick={() =>setFilter(2)} type=\"button\" className={`btn btn${filter===2 ? '' : '-outline'}-secondary`}>Невыполненные</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport {InputForm} from \"../components/InputForm\";\r\nimport {Notes} from \"../components/Notes\";\r\nimport {APIContext} from \"../context/api/apiContext\";\r\nimport {Filter} from \"../components/Filter\";\r\n\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const Home = () => {\r\n\r\n    const {loading, notes, fetchNotes} = useContext(APIContext);\r\n    const {token} = useContext(AuthContext);\r\n\r\n    const [filter, setFilter] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        fetchNotes(token);\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <InputForm/>\r\n            <hr/>\r\n            <Filter filter={filter} setFilter={setFilter}/>\r\n            <Notes notes={notes} filter={filter} />\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useContext, useEffect, useState, Fragment} from 'react'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\n\r\nexport const AuthPage = () =>{\r\n    const auth = useContext(AuthContext);\r\n    const message = useMessage();\r\n    const {loading, error, request, clearError} = useHttp();\r\n\r\n    const [form, setForm] = useState({\r\n        email:'',\r\n        password:''\r\n    });\r\n\r\n    const [login, setLogin] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        message(error);\r\n        clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    const isLoginHandler = () => {\r\n        setLogin(!login);\r\n    }\r\n\r\n    const changeHandler = event => {\r\n        setForm({...form, [event.target.name]:event.target.value})\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try{\r\n            if (form.password !== form.confirm){\r\n                message('Пароли не совпадают');\r\n                return;\r\n            }\r\n            const  data = await request('/api/auth/register','POST', {...form});\r\n            if (data.token){\r\n                auth.login(data.token, data.userId);\r\n            }\r\n            message(data.message);\r\n        }\r\n        catch (e){\r\n\r\n        }\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try{\r\n            const  data = await request('/api/auth/login','POST', {...form});\r\n            auth.login(data.token, data.userId);\r\n        }\r\n        catch (e){\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card\">\r\n                <h5 className=\"card-header\">Авторизация</h5>\r\n                <div className=\"card-body\">\r\n                    <div className=\"form-floating mb-3\">\r\n                        <input onChange={changeHandler} type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" placeholder=\"name@example.com\"/>\r\n                            <label htmlFor=\"email\">Email address</label>\r\n                    </div>\r\n                    <div className=\"form-floating  mb-3\">\r\n                        <input onChange={changeHandler} type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Password\"/>\r\n                            <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n\r\n                    {!login &&\r\n                    <div className=\"form-floating\">\r\n                        <input onChange={changeHandler} type=\"password\" className=\"form-control\" id=\"confirm\" name=\"confirm\" placeholder=\"Confirm password\"/>\r\n                        <label htmlFor=\"password\">Confirm password</label>\r\n                    </div>\r\n                    }\r\n\r\n\r\n                    <hr/>\r\n                    {login &&\r\n                        <div>\r\n                            <button  onClick={loginHandler} disabled={loading} className=\"btn btn-primary m-1\">Войти</button>\r\n                            <button  onClick={isLoginHandler} disabled={loading} className=\"btn btn-link m-1\">Регистрация</button>\r\n                        </div>\r\n                    }\r\n                    {!login &&\r\n                        <div>\r\n                            <button  onClick={isLoginHandler} disabled={loading} className=\"btn btn-link\">Войти</button>\r\n                            <button  onClick={registerHandler} disabled={loading} className=\"btn btn-primary\">Зарегистрироваться</button>\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import {useCallback} from \"react\";\r\n\r\nexport const useMessage = () =>{\r\n    return useCallback(text => {\r\n        //TODO заменить на react-bootstrap Toast\r\n        if (window.M && text){\r\n            window.M.toast({html:text});\r\n        }\r\n    },[])\r\n}\r\n","import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true);\r\n        try{\r\n            if(body){\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            }\r\n           const  response = await fetch(url, {\r\n               method, body, headers\r\n           })\r\n\r\n            const data = await response.json();\r\n\r\n           if (!response.ok){\r\n               throw new Error(data.message || 'Ошибочка вышла')\r\n           }\r\n\r\n           setLoading(false);\r\n\r\n           return data;\r\n        }\r\n        catch (e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback( ()=> setError(null),[]);\r\n\r\n    return {loading, request, error, clearError}\r\n}\r\n","import {useState, useCallback, useEffect} from 'react'\r\n\r\nconst storageName = 'userData';\r\n\r\nexport const useAuth = () => {\r\n\r\n    const [token, setToken] = useState(null);\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    const login = useCallback( (jwtToken, id) => {\r\n        setToken(jwtToken);\r\n        setUserId(id);\r\n        localStorage.setItem(storageName, JSON.stringify({userId:id, token:jwtToken}));\r\n\r\n    }, []);\r\n    const logout = useCallback( () => {\r\n        setToken(null);\r\n        setUserId(null);\r\n        localStorage.removeItem(storageName);\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n        if(data && data.token){\r\n            login(data.token, data.userId);\r\n        }\r\n\r\n    },[login]);\r\n\r\n    return {login, logout, token, userId}\r\n\r\n}\r\n","import {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER, UPDATE_NOTE} from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_LOADER]: state => ({...state, loading:true}),\r\n    [ADD_NOTE]: (state, {payload}) => ({...state, notes: [...state.notes, payload]}),\r\n    [FETCH_NOTES]: (state, {payload}) => ({...state, notes:payload, loading:false}),\r\n    [REMOVE_NOTE]: (state, {payload}) => ({...state, notes: state.notes.filter(note => note._id !== payload)}),\r\n    [UPDATE_NOTE]: (state, {payload}) => ({...state, notes: state.notes.map((curr)=>{if(curr._id === payload.id) curr.done = payload.flag ;return curr})}),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport  const  apiReducer = (state, action)=>{\r\n    const handle = handlers[action.type]  ||  handlers.DEFAULT\r\n    return handle(state, action);\r\n}\r\n","import React, { useContext, useReducer } from \"react\";\r\nimport {APIContext} from \"./apiContext\";\r\nimport {apiReducer} from \"./apiReducer\";\r\nimport axios from \"axios\";\r\nimport {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER, UPDATE_NOTE} from \"../types\";\r\nimport {AlertContext} from \"../alert/alertContext\";\r\n\r\n\r\nconst baseUrl = process.env.API_BASE || 'http://localhost:5000';\r\n\r\nexport const APIState = ({children}) =>{\r\n    const initialState = {\r\n        notes:[],\r\n        loading:false\r\n    }\r\n\r\n    const alert = useContext(AlertContext);\r\n\r\n    const [state, dispatch] = useReducer(apiReducer, initialState);\r\n\r\n    const showLoader = () => dispatch({type:SHOW_LOADER});\r\n\r\n    const fetchNotes = async (token) => {\r\n        showLoader();\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }\r\n        const res = await axios.get(`/api/note/`, config);\r\n\r\n        const payload = Object.keys(res.data).map(key => {\r\n            return {\r\n                ...res.data[key],\r\n                id:key\r\n            }\r\n        })\r\n\r\n        dispatch({\r\n            type:FETCH_NOTES,\r\n            payload\r\n        })\r\n    }\r\n\r\n    const addNote = async (text, token) => {\r\n        const note = {\r\n            text\r\n        }\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }\r\n        try{\r\n            const res = await axios.post(`/api/note/add`, note, config)\r\n\r\n            const payload = {\r\n                ...res.data.note,\r\n                id:res.data.note._id\r\n            }\r\n            if (res.status === 200) alert.show('Заметка создана', 'success');\r\n\r\n            dispatch({type:ADD_NOTE, payload})\r\n        }\r\n        catch (e) {\r\n            throw new Error(e.message)\r\n        }\r\n\r\n    }\r\n\r\n    const removeNote = async (id, token) => {\r\n        const note = {\r\n            id\r\n        }\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }\r\n        const res = await axios.post(`/api/note/remove`, note, config)\r\n\r\n        if (res.status === 200) alert.show('Заметка удалена', 'warning');\r\n        dispatch({type: REMOVE_NOTE, payload: id})\r\n    }\r\n\r\n    const updateNote = async (id, flag, token) => {\r\n        const note = {\r\n            id,\r\n            done:flag\r\n        }\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }\r\n        const res = await axios.post(`/api/note/update`, note, config)\r\n\r\n        if (res.status === 200) alert.show('Заметка обновлена', 'success');\r\n        dispatch({type:UPDATE_NOTE, payload:{id, flag}})\r\n    }\r\n\r\n    return (\r\n        <APIContext.Provider value={{\r\n           showLoader,  addNote, removeNote, fetchNotes, updateNote,\r\n            loading: state.loading,\r\n            notes: state.notes\r\n        }}>\r\n            {children}\r\n        </APIContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Navbar} from './components/Navbar'\r\nimport {Alert} from \"./components/Alert\";\r\nimport {AlertState} from \"./context/alert/AlertState\";\r\nimport {useRoutes} from \"./routes\";\r\nimport 'materialize-css';\r\nimport {useAuth} from \"./hooks/auth.hook\";\r\nimport {AuthContext} from \"./context/AuthContext\";\r\nimport {APIState} from \"./context/api/APIState\";\r\n\r\nfunction App() {\r\n    const {token, login, logout, userId} = useAuth();\r\n    const isAuthenticated = !!token;\r\n    const routes = useRoutes(isAuthenticated);\r\n\r\n  return (\r\n\r\n      <AlertState>\r\n          <AuthContext.Provider value={{token, userId, login, logout, isAuthenticated}}>\r\n                  <APIState>\r\n                        <BrowserRouter>\r\n                            <Navbar/>\r\n                            <div className=\"container pt-4\">\r\n                                <Alert/>\r\n                                {routes}\r\n                            </div>\r\n                        </BrowserRouter>\r\n                  </APIState>\r\n          </AuthContext.Provider>\r\n      </AlertState>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport  {Switch, Route, Redirect} from 'react-router-dom';\r\nimport {Home} from \"./pages/Home\";\r\nimport {AuthPage} from \"./pages/AuthPage\";\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n    if (isAuthenticated){\r\n        return (\r\n            <Switch>\r\n                <Route path={'/'} exact component={Home}/>\r\n                <Redirect to='/'/>\r\n            </Switch>\r\n        )\r\n    }\r\n    return (\r\n        <Switch>\r\n            <Route path={'/'} exact component={AuthPage}/>\r\n            <Redirect to='/'/>\r\n        </Switch>\r\n    )\r\n\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}